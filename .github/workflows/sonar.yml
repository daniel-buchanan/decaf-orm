name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: bash
        run: |
          mkdir ./.sonar
          mkdir ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
      - name: Cache Coverlet
        id: cache-coverlet
        uses: actions/cache@v1
        with:
          path: ./.coverlet
          key: ${{ runner.os }}-coverlet
          restore-keys: ${{ runner.os }}-coverlet
      - name: Install Coverlet
        shell: bash
        run: |
          dotnet tool install --global coverlet.console --tool-path ./.coverlet
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: bash
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin \
            /k:"daniel-buchanan_pdq" \
            /o:"daniel-buchanan" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths=coverage.xml
          dotnet build --no-incremental pdq.sln 
          ./.coverlet/coverlet ./tests/pdq.core-tests/bin/Debug/net6.0/pdq.core-tests.dll \
            --target "dotnet" \
            --targetargs "test --no-build" \
            -f=opencover \
            -o="coverage.xml"
          ./.sonar/scanner/dotnet-sonarscanner end \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
