name: Publish
on:
  workflow_call:
    inputs:
      package-name:
        type: string
        required: true
      project-path:
        type: string
        required: true
      latest-variable-name:
        type: string
        required: true
      paths-to-check:
        type: string
        required: true
jobs:
  check-paths:
    runs-on: ubuntu-latest
    name: Check Paths
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            core:
              - '${{ inputs.paths-to-check }}'
    outputs:
      do-run: ${{ steps.changes.outputs.core }}

  pack:
    runs-on: ubuntu-latest
    name: Pack
    needs: [check-paths]
    if: needs.check-paths.outputs.do-run == 'true'
    steps:
      - uses: actions/checkout@v2
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Pack
        env:
          PACKAGE_VERSION: ${{ format('0.1.{0}+{1}', github.run_number, github.sha) }}
        run: dotnet pack ${{ inputs.project-path }} -c Release -p:Version=$PACKAGE_VERSION -o ./output
      - name: Upload Package
        uses: actions/upload-artifact@v2.2.4
        with:
          name: package
          path: ./output
          retention-days: 0

  publish:
    runs-on: ubuntu-latest
    needs: [pack,check-paths]
    if: needs.check-paths.outputs.do-run == 'true'
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v2.0.10
      with:
        name: package
        path: ./output
    - name: Upload to NuGet
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        PACKAGE_NAME: ${{ format('${{ inputs.package-name }}.0.1.{0}.nupkg', github.run_number) }}
      run: |
        dotnet nuget push ./output/$PACKAGE_NAME \
          -k $NUGET_API_KEY \
          -s https://api.nuget.org/v3/index.json
    - name: Persist Latest Version
      env:
        PACKAGE_VERSION: ${{ format('0.2.{0}+{1}', github.run_number, github.sha) }}
      uses: UnlyEd/github-action-store-variable@v3.0.12
      with:
        # Write variable: `VAR=VALUE` | Read variable: `VAR`
        variables: ${{ inputs.latest-variable-name }}=PACKAGE_VERSION
        failIfNotFound: false

